@model EatTogether.Models.SessionModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="jumbotron" style="margin-top: 50px; background-color: white; height: 100%; font-family: Berlin Sans FB; ">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>SessionModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.UserCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlaceName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PlaceName, new { htmlAttributes = new { @class = "form-control", id = "PlaceAutocomplete" } })
                    @Html.ValidationMessageFor(model => model.PlaceName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.HiddenFor(model => model.Place.Type, new { id = "PlaceTypeData" })
                @Html.HiddenFor(model => model.Place.Name, new { id = "PlaceNameData" })
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
    @section Scripts {
        <script src="~/Custom_Scripts/PlacesAPI.js"></script>
        <script async src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyCeylSk7TTyCBiDeBk33B9iC8HV69inM-8&callback=callPlaces"></script>
        @Scripts.Render("~/bundles/jqueryval")
    }
